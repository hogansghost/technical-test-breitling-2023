import client from '@/apollo/client';
import { WatchFragment } from '@/fragments/watch/watch.generated';
import { GetWatchDocument, GetWatchQuery, GetWatchQueryVariables } from '@/queries/getWatch/getWatch.generated';
import type { GetStaticPaths, GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { ParsedUrlQuery } from 'querystring';

type WatchPageQuery = ParsedUrlQuery & {
  watchId?: string;
};

export const Watch: NextPage<{ watch: WatchFragment }> = ({ watch }) => {
  return (
    <>
      <Head>
        <title>Watch</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Watch {watch?.id}</h1>

        {watch?.media?.map(
          (media) =>
            media.type === 'IMAGE' && <Image key={media.id} alt="lol" src={media.url ?? ''} width={520} height={520} />
        )}

        <Link href="/">Home</Link>
        <Link href="/watches">Watches</Link>
      </main>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  // Empty paths as there are thousands of products so we'll generate on first access.
  return {
    paths: [],
    fallback: 'blocking',
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const watchId = params?.watchId as string;

  try {
    const { data, errors } = await client.query<GetWatchQuery, GetWatchQueryVariables>({
      query: GetWatchDocument,
      variables: {
        id: watchId,
      },
    });

    if (!data || errors) {
      return {
        notFound: true,
      };
    }

    return {
      props: {
        watch: data.product,
      },
    };
  } catch {
    return {
      notFound: true,
    };
  }
};

export default Watch;
