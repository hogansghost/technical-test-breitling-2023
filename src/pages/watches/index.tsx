import { SearchInput } from '@/components/SearchInput/SearchInput';
import { WatchCard } from '@/components/common/products/WatchCard/WatchCard';
import { useGetProductsQuery } from '@/queries/getProducts/getProducts.generated';
import { kebabCase } from 'lodash';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useCallback, useState } from 'react';
import { WatchesCardGrid } from './Index.styles';

export const Watches: NextPage<{}> = () => {
  const router = useRouter();

  const [search, setSearch] = useState('');
  const [filter, setFilter] = useState('');

  const {
    data,
    loading: dataLoading,
    networkStatus,
    refetch,
    fetchMore,
  } = useGetProductsQuery({
    notifyOnNetworkStatusChange: true,
    variables: {
      filterSearch: search,
      filterType: filter,
    },
  });

  const handleLoadMoreClick = useCallback(() => {
    console.log(data?.products?.pageInfo?.endCursor);
    fetchMore({
      variables: {
        after: data?.products?.pageInfo?.endCursor,
      },
    });
  }, [fetchMore, data?.products?.pageInfo?.endCursor]);

  const handleSearchChange = (value: string) => {
    // TODO: create a util to spread filters so we don't lose other values.
    router.replace(
      {
        query: {
          ...(value ? { search: encodeURIComponent(value) } : {}),
          ...(filter.length ? { filter: encodeURIComponent(filter) } : {}),
        },
      },
      undefined,
      { shallow: true }
    );

    setSearch(value);

    refetch({
      after: null,
      filterSearch: value,
      filterType: filter,
    });
  };

  return (
    <>
      <Head>
        <title>Watches</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div style={{ padding: '32px', background: '#fafafa' }}>
          <SearchInput onSearchChange={handleSearchChange} />
        </div>

        {!!data?.products?.edges?.length && (
          <div style={{ width: '1400px', maxWidth: '100%', margin: 'auto' }}>
            <WatchesCardGrid>
              {data.products.edges.map(({ node: product }, index) => (
                <WatchCard
                  key={product.id}
                  id={product.id}
                  url={`/watches/${encodeURIComponent(`${product.id}-${kebabCase(product.name)}`)}`}
                  thumbnail={product?.thumbnail}
                  name={product?.name}
                  pricing={product?.pricing}
                />
              ))}
            </WatchesCardGrid>

            <div style={{ padding: '32px' }}>
              <button
                type="button"
                disabled={!data?.products?.pageInfo?.hasNextPage ?? true}
                onClick={handleLoadMoreClick}
              >
                Load more
              </button>
            </div>
          </div>
        )}

        <Link href="/">Home</Link>
        <Link href="watches/UHJvZHVjdDoxNTQ=">Watch</Link>
      </main>
    </>
  );
};

export default Watches;
